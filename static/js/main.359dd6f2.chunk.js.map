{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,kBAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACA,qBACAC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eAEH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCPTC,EAAW,SAAAR,GAAK,OAE7B,cADA,CACA,OAAKC,UAAU,YAAf,cACID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCHbM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOC,KAAK,SACZb,UAAU,SACNW,YAAaA,EACbG,SAAWF,MCoCJG,E,kDAvCb,aAAgB,IAAD,8BACb,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IAJD,E,gEAQK,IAAD,OACpBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAM9B,MAEyBC,KAAKN,MAA/Bb,EAFC,EAEDA,SAAUU,EAFT,EAESA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAElD,OACM,sBAAKhC,UAAU,MAAf,UACA,kDACC,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAce,KAAKf,eAElB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA/BdK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.359dd6f2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n    <img \r\n    alt=\"monster\" \r\n    src={`https://robohash.org/${props.monster.id}?set=set2`} \r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n    \r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from './card/card.component';\r\n\r\nexport const CardList = props => (\r\n// console.log(props);\r\n<div className=\"card-list\"> {\r\n    props.monsters.map(monster => (\r\n       <Card key={monster.id} monster={monster}/>)\r\n    )}\r\n  </div>\r\n\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\n// Using react funtional component\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input type=\"search\"\r\n    className=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={ handleChange }\r\n        />\r\n);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n     monsters: [],\r\n     searchField: ''\r\n    }; \r\n  }\r\n\r\n  componentDidMount(){\r\n fetch('https://jsonplaceholder.typicode.com/users')\r\n .then(response => response.json() )\r\n .then (users => this.setState({monsters: users}));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({searchField: e.target.value})\r\n  }\r\n  render () {\r\n    // object destructing the state\r\n    const {monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter(monster => \r\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\r\n    );\r\n    return (\r\n          <div className=\"App\">\r\n          <h1>Monsters Rolodex</h1>\r\n           <SearchBox\r\n           placeholder=\"search monsters\" \r\n           handleChange={this.handleChange}\r\n           />\r\n            <CardList monsters={filteredMonsters}>\r\n            </CardList>\r\n       \r\n          </div>\r\n    );    \r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}